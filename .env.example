##################################
# LOGGING CONFIGURATION
##################################

# Set log level (available levels: debug, info, warn, error).
LOG_LEVEL=info

# Enable a write log to file.
LOG_WRITE=true

# Set the directory for write a log files (if leave empty, "logs" is used).
LOG_WRITE_DIRECTORY=

# Enable API requests/responses logging.
LOG_API_REQUESTS=true

# Enable log IP addresses.
LOG_IP_ADDRESSES=false

# Allow IP addresses specified in the X-Forwarded-For header (to work behind a front-end proxy).
LOG_IP_ADDRESSES_FORWARDED_FOR=false

##################################
# INTEGRATION CONFIGURATION
##################################

# Set a host to connect to the Platform Hub Gateway.
PLATFORM_HUB_GW_HOST=127.0.0.1

# Set a port to connect to the Platform Hub Gateway.
PLATFORM_HUB_GW_PORT=8000

# Enable Steer Server session (used for Admin Panel authorization).
# For authorization with the Steer server to work, you need to 
# import the "share/steer/ExportSteerData_steeradmin_API.sef" file in the
# Steer web panel, create a user and give permissions.
STEER_ENABLE=false

# Set a host to connect to the Steer Hub.
STEER_HOST=127.0.0.1

# Set a port to connect to the Steer Hub.
STEER_PORT=8105

# Enable a use of the FCGI Gateway Web Server to send requests when performing
# certain actions, such as: server test, instant benefit activation, sending premium items, etc.
FCGI_GW_WEBAPI_ENABLE=false

# Set a URL address to connect to the FCGI Gateway Web Server
FCGI_GW_WEBAPI_URL=http://127.0.0.1:8020

##################################
# ARBITER API CONFIGURATION
##################################

# Set the host for receiving connections from the Arbiter server (TERA Server).
# Use 0.0.0.0 or leave empty for bind API on all IPs (not recomended).
API_ARBITER_LISTEN_HOST=127.0.0.1

# Set the port for receiving connections from the Arbiter server.
API_ARBITER_LISTEN_PORT=8080

# Ebable reporting game activity (login and logout) to the reports database.
API_ARBITER_REPORT_ACTIVITY=false

# Enable reporting characters information (create, modify, delete) to the reports database.
API_ARBITER_REPORT_CHARACTERS=false

# Enable reporting using of chronos crolls (premium/vip/tera-club items) to the reports database.
API_ARBITER_REPORT_CHRONOSCROLLS=false

# Enable reporting cheats information to the reports database.
API_ARBITER_REPORT_CHEATS=false

##################################
# PORTAL API CONFIGURATION
##################################

# Set the host for receiving connections from the users for access to Portal or Launcher.
# Use 0.0.0.0 or leave empty for bind API on all IPs.
API_PORTAL_LISTEN_HOST=

# Set the port for receiving connections from the users for access to Portal or Launcher.
API_PORTAL_LISTEN_PORT=80

# Set language for the Portal or Launcher web interface (available locales: en, ru).
API_PORTAL_LOCALE=en

# Enable language selector in the Launcher web interface.
API_PORTAL_LOCALE_SELECTOR=true

# CHANGE IT!
# Specify the secret word required to encrypt sessions.
API_PORTAL_SECRET=your_secret_word

# Set the project brand name.
API_PORTAL_BRAND_NAME=Tera Private

# Enable Ingame Shop features (requires FCGI Gateway).
# Setup shop on game server:
# 1) Remove <Shop url="..." /> from "DeploymentConfig.xml".
# 2) Set the endpoint in "config_arb_gw.txt" as:
#    web_shop_url=http://YOUR_API_PORTAL_HOST/tera/ShopAuth?authKey=%s
API_PORTAL_SHOP_ENABLE=false

# Set the ID of the benefit that will be activated for the VIP/premium status.
# See StrSheet_AccountBenefit for more details about available IDs.
# If leave empty, the ID 533 (RU VIP) will be used.
API_PORTAL_BENEFIT_ID_ELITE_STATUS=533

# Set the initial benefits that will be assigned to the user on registration.
# The value indicates the number of days the benefit is valid.
# Set 0 as value or remove/comment parameter to disable the benefit.
API_PORTAL_INITIAL_BENEFIT_ID_533_DAYS=30 # RU VIP
API_PORTAL_INITIAL_BENEFIT_ID_534_DAYS=3600 # RU Founder
API_PORTAL_INITIAL_BENEFIT_ID_1000_DAYS=3600 # PC Cafe

# Enable public directory for static files (needed for Launcher static files).
# Also, this directory can be used to place Launcher and Client update files.
API_PORTAL_PUBLIC_FOLDER_ENABLE=true

# Enable a reCAPTCHA service for validation during registration.
API_PORTAL_RECAPTCHA_ENABLE=false

# Set the site key of the reCAPTCHA service.
API_PORTAL_RECAPTCHA_SITE_KEY=

# Set the secret key of the reCAPTCHA service.
API_PORTAL_RECAPTCHA_SECRET_KEY=

# Set the privilege number that has access to Launcher QA functions.
API_PORTAL_LAUNCHER_QA_PRIVILEGE=10

# Set the default region name for Client started with Launcher (e.g. EUR, RUS, TW).
API_PORTAL_CLIENT_DEFAULT_REGION=EUR

# Set a list of supported regions by Client with language names.
API_PORTAL_CLIENT_REGIONS_EUR=English
API_PORTAL_CLIENT_REGIONS_RUS=Русский
API_PORTAL_CLIENT_REGIONS_TW=中国人

# Set the URL address for placing Client and Launcher updates files.
# If leave it empty, the "/public/patch" root will be used.
API_PORTAL_CLIENT_PATCH_URL=

# Enable the client file check disallow.
# If set to true, the launcher will not check for client updates.
API_PORTAL_CLIENT_PATCH_NO_CHECK=false

# Enable sha512 password hashing when storing in database.
API_PORTAL_USE_SHA512_PASSWORDS=false

# Set the salt to calculate the sha512 hash (not used by default).
API_PORTAL_USE_SHA512_PASSWORDS_SALT=

# Auto setting of server available status (using the Arbiter port check method).
SLS_AUTO_SET_AVAILABLE=true

##################################
# ADMIN PANEL CONFIGURATION
##################################

# Set the host for receiving connections for access to Admin Panel.
# Use 0.0.0.0 or leave empty for bind API on all IPs.
ADMIN_PANEL_LISTEN_HOST=

# Set the port for receiving connections for access to Admin Panel.
ADMIN_PANEL_LISTEN_PORT=85

# Set language for the Admin Panel (available locales: en, ru).
ADMIN_PANEL_LOCALE=en

# CHANGE IT!
# Specify the secret word required to encrypt authorization sessions.
ADMIN_PANEL_SECRET=your_secret_word

# Set login for QA administrator (only for Admin Panel tests).
# QA administrator account only available if option "STEER_ENABLE" is set to "false".
ADMIN_PANEL_QA_USER=apiadmin

# Set password for QA administrator.
ADMIN_PANEL_QA_PASSWORD=password

##################################
# ACCOUNT DATABASE CONFIGURATION
##################################

# Set a host to connect to the account database.
DB_ACCOUNT_HOST=127.0.0.1

# Set a port to connect to the account database.
DB_ACCOUNT_PORT=3306

# Set the name of the account database.
DB_ACCOUNT_DATABASE=accountdb

# Set the user to connect to the account database.
DB_ACCOUNT_USERNAME=api

# Set the password to connect to the account database.
DB_ACCOUNT_PASSWORD=

##################################
# SHOP DATABASE CONFIGURATION
##################################

# Set a host to connect to the shop database.
DB_SHOP_HOST=127.0.0.1

# Set a port to connect to the shop database.
DB_SHOP_PORT=3306

# Set the name of the shop database.
DB_SHOP_DATABASE=accountdb

# Set the user to connect to the shop database.
DB_SHOP_USERNAME=api

# Set the password to connect to the shop database.
DB_SHOP_PASSWORD=

##################################
# REPORT DATABASE CONFIGURATION
##################################

# Set a host to connect to the report database.
DB_REPORT_HOST=127.0.0.1

# Set a port to connect to the report database.
DB_REPORT_PORT=3306

# Set the name of the report database.
DB_REPORT_DATABASE=accountdb

# Set the user to connect to the report database.
DB_REPORT_USERNAME=api

# Set the password to connect to the report database.
DB_REPORT_PASSWORD=
